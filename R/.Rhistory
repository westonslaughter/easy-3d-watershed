getwd()
options(rgl.useNULL = FALSE)
library(rayshader)
library(tidyverse)
library(nhdplusTools)
library(sf)
# Get watershed Boundary from NHD
start_point <- st_sfc(st_point(c(-97.789594, 30.351957)), crs = 4269)
start_comid <- discover_nhdplus_id(start_point)
flowline <- navigate_nldi(list(featureSource = "comid",
featureID = start_comid),
mode = "upstreamTributaries",
distance_km = 1000)
mapview::mapview(start_point)
flowline <- navigate_nldi(list(featureSource = "comid",
featureID = start_comid),
mode = "upstreamTributaries",
distance_km = 1000)
subset_file <- tempfile(fileext = ".gpkg")
subset <- subset_nhdplus(comids = as.integer(flowline$UT$nhdplus_comid),
output_file = subset_file,
nhdplus_data = "download",
flowline_only = FALSE,
return_data = TRUE, overwrite = TRUE)
watershed <- subset$CatchmentSP %>%
st_union() %>%
st_as_sf()
# Get DEM and mask
dem <- elevatr::get_elev_raster(watershed, z = 11)
croped <- raster::crop(dem, watershed)
mask <- raster::mask(croped, watershed)
mapview::mapview(mask)
min_val <- min(raster::values(mask), na.rm = TRUE)
min_val
raster::values(mask) <- raster::values(mask) - min_val
mapview::mapview(mask)
# Make rayshader matrix
mask = raster_to_matrix(mask)
?save_3dprint
# Save as stl
mask %>%
sphere_shade() %>%
plot_3d(mask, zscale = 1)
# rgl::rglwidget()
render_snapshot()
save_3dprint('watershed_3d.stl', maxwidth = '150mm', clear=TRUE)
getwd()
